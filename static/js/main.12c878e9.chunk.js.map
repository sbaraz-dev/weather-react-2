{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","favList","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","size","id","favInfo","find","x","stadt","info","name","sys","country","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","Math","round","onClick","item","select","document","getElementById","elementEnhalten","Array","from","forEach","option_element","window","alert","el","createElement","textContent","appendChild","push","addFavorite","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"sNAGMA,EACC,mCADDA,EAEE,2CAGFC,EAAU,GAuIDC,MArIf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAoEA,OACE,qBAAKC,UAAmC,oBAAhBF,EAAQG,MAAyBH,EAAQG,KAAKC,KAAO,GAAO,WAA0B,MAA9G,SACE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,iBACZC,SAAU,SAAAC,GAAC,OAAIT,EAASS,EAAEC,OAAOC,QACjCA,MAAOZ,EACPa,WA5EK,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIpB,EAAJ,qBAAyBI,EAAzB,+BAAqDJ,IACvDqB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJjB,EAAWiB,GACXnB,EAAS,IACToB,QAAQC,IAAIF,WAyEd,sBAAKhB,UAAU,gBAAf,UACE,qBAAKA,UAAU,OAAf,uBAGA,qBAAKA,UAAU,YAAf,SACE,yBACEA,UAAU,aACVmB,KAAK,IAAIC,GAAG,aACZf,SA5Ea,SAAAK,GAEvB,IAAMW,EAAU5B,EAAQ6B,MAAK,SAAAC,GAAC,OAAIA,EAAEC,QAAUd,EAAIH,OAAOC,SAAOiB,KAChE1B,EAAWsB,IAsEH,mBAISzB,EAJT,6CAUqB,oBAAhBE,EAAQG,KACjB,sBAAKD,UAAU,WAAf,UACE,sBAAKA,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAWoB,GAAG,cAA7B,UAA4CtB,EAAQ4B,KAApD,KAA4D5B,EAAQ6B,IAAIC,WACxE,qBAAK5B,UAAU,OAAf,SAjFU,SAAC6B,GACnB,IAGIC,EAFO,CAAC,UAAW,SAAU,WAAY,WAAY,aAAc,UAAW,WAEnED,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,SAAU,UAAW,UAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKtGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAwEHE,CAAY,IAAIC,WAEzC,sBAAKvC,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAOoB,GAAG,UAAzB,UACKoB,KAAKC,MAAM3C,EAAQG,KAAKC,MAD7B,WAGA,qBAAKF,UAAU,UAAf,SACGF,EAAQA,QAAQ,GAAGG,UAIxB,qBAAKD,UAAU,mBAAf,SACE,yBACEA,UAAU,sBACV0C,QAAS,kBAnFrB,SAAqBC,GACnB,IAAIC,EAASC,SAASC,eAAe,cACjCC,GAAkB,EAStB,GAPAC,MAAMC,KAAKL,GAAQM,SAAQ,SAASC,GAClC,GAAIA,EAAe3C,OAASmC,EAG1B,OAFAS,OAAOC,MAAP,UAAgBV,EAAhB,kDACAI,GAAkB,OAIlBA,EAAJ,CAIA,IAAIO,EAAKT,SAASU,cAAc,UAChCD,EAAG9C,MAAQmC,EACXW,EAAGE,YAAcb,EACjBC,EAAOa,YAAYH,GAGnB7D,EAAQiE,KAAK,CACXlC,MAAM,GAAD,OAAK1B,EAAQ4B,KAAb,aAAsB5B,EAAQ6B,IAAIC,SACvCH,KAAM,CACJC,KAAM5B,EAAQ4B,KACdC,IAAK,CAACC,QAAS9B,EAAQ6B,IAAIC,SAC3B3B,KAAM,CAACC,KAAMJ,EAAQG,KAAKC,MAC1BJ,QAAS,CAAC,CAACG,KAAMH,EAAQA,QAAQ,GAAGG,UAGxCgB,QAAQC,IAAIzB,EAAQ,KAqDKkE,CAAY,GAAD,OAAI7D,EAAQ4B,KAAZ,aAAqB5B,EAAQ6B,IAAIC,WAF7D,UAIK,cAAC,IAAD,CAAkBT,KAAK,SAJ5B,sCASC,SC3HEyC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjD,MAAK,YAAkD,IAA/CkD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFzB,SAASC,eAAe,SAM1Bc,M","file":"static/js/main.12c878e9.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { FcAcceptDatabase } from 'react-icons/fc';\r\n\r\nconst api = {\r\n  key: 'ba97997bcf3c85fc91414f251a3265f9',\r\n  base: 'https://api.openweathermap.org/data/2.5/'\r\n}\r\n\r\nconst favList = []\r\n\r\nfunction App() {\r\n\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('');\r\n          console.log(result);\r\n        });\r\n    }\r\n  }\r\n\r\n  const searchByFavorite = evt => {\r\n    // setQuery(evt.target.value);\r\n    const favInfo = favList.find(x => x.stadt === evt.target.value).info \r\n    setWeather(favInfo)     \r\n  }\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"];\r\n    let days = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n  }\r\n\r\n  function addFavorite(item) {\r\n    var select = document.getElementById('fav-box-id'); \r\n    var elementEnhalten = false;\r\n\r\n    Array.from(select).forEach(function(option_element) {\r\n      if (option_element.value == item) {\r\n        window.alert(`${item} ist bereits in den Favoriten enthalten!`);\r\n        elementEnhalten = true;\r\n        return;\r\n      } \r\n    });\r\n    if (elementEnhalten) {\r\n      return\r\n    }\r\n\r\n    var el = document.createElement('option');\r\n    el.value = item;\r\n    el.textContent = item;\r\n    select.appendChild(el);\r\n    // window.alert(`Sie haben ${item} zu den Favoriten hinzugefügt.`)\r\n\r\n    favList.push({\r\n      stadt: `${weather.name}, ${weather.sys.country}`,\r\n      info: {\r\n        name: weather.name, \r\n        sys: {country: weather.sys.country}, \r\n        main: {temp: weather.main.temp}, \r\n        weather: [{main: weather.weather[0].main}] \r\n      }\r\n    });\r\n    console.log(favList[0])\r\n\r\n\r\n  }\r\n\r\n\r\n  return (\r\n    <div className={(typeof weather.main != 'undefined') ? ((weather.main.temp > 16) ? ('app warm') : ('app')) : ('app')}>\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <input \r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Ort suchen ...\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n            ></input>\r\n        </div>\r\n\r\n        <div className=\"favoriten-box\">\r\n          <div className=\"kopf\">\r\n            Favoriten\r\n          </div>\r\n          <div className=\"körper\">\r\n            <select \r\n              className=\"auswahlbox\" \r\n              size=\"1\" id='fav-box-id' \r\n              onChange={searchByFavorite}>\r\n              value={query}\r\n              //hier sit die Liste der Favoriten\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {(typeof weather.main != 'undefined') ? (\r\n        <div className=\"info-box\">\r\n          <div className=\"location-box\">\r\n            <div className=\"location\" id=\"location-id\">{weather.name}, {weather.sys.country}</div>\r\n            <div className=\"date\">{dateBuilder(new Date())}</div>\r\n          </div>\r\n          <div className=\"weather-box\">\r\n            <div className=\"temp\" id=\"temp-id\">\r\n                {Math.round(weather.main.temp)}°C\r\n            </div>\r\n            <div className=\"weather\">\r\n              {weather.weather[0].main}\r\n            </div>\r\n          </div>\r\n        \r\n          <div className=\"add-favorite-box\">\r\n            <button \r\n              className=\"add-favorite-button\"\r\n              onClick={() => addFavorite(`${weather.name}, ${weather.sys.country}`)}\r\n              >\r\n                 <FcAcceptDatabase size=\"15px\"  /> Zu Favoriten hinzufügen\r\n            </button>\r\n          </div>\r\n          \r\n        </div> \r\n        ) : ('')}\r\n\r\n\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}