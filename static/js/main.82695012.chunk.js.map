{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","setWeather","className","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","d","day","getDay","date","getDate","month","getMonth","year","getFullYear","dateBuilder","Date","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAEMA,EACC,mCADDA,EAEE,0CA2DOC,MAxDf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNC,EADM,KACCC,EADD,OAEiBF,mBAAS,IAF1B,mBAEGG,GAFH,WA4Bb,OACE,qBAAKC,UAAU,MAAf,SACE,iCACE,qBAAKA,UAAU,aAAf,SACE,uBACEC,KAAK,OACLD,UAAU,aACVE,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIN,EAASM,EAAEC,OAAOC,QACjCA,MAAOT,EACPU,WAlCK,SAAAC,GACG,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAIhB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACJf,EAAWe,GACXhB,EAAS,IACTiB,QAAQC,IAAIF,WA8Bd,sBAAKd,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,iCACA,qBAAKA,UAAU,OAAf,SA3BY,SAACiB,GACnB,IAGIC,EAFO,CAAC,UAAW,SAAU,WAAY,WAAY,aAAc,UAAW,WAEnED,EAAEE,UACbC,EAAOH,EAAEI,UACTC,EALS,CAAC,SAAU,UAAW,UAAQ,QAAS,MAAO,OAAQ,OAAQ,SAAU,YAAa,UAAW,WAAY,YAKtGL,EAAEM,YACjBC,EAAOP,EAAEQ,cAEb,MAAM,GAAN,OAAUP,EAAV,YAAiBE,EAAjB,YAAyBE,EAAzB,YAAkCE,GAkBLE,CAAY,IAAIC,WAEzC,sBAAK3B,UAAU,cAAf,UACE,qBAAKA,UAAU,OAAf,qBAGA,qBAAKA,UAAU,UAAf,4BC5CK4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.82695012.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst api = {\r\n  key: 'ba97997bcf3c85fc91414f251a3265f9',\r\n  base: 'https://api.openweathermap.org/data/2.5'\r\n}\r\n\r\nfunction App() {\r\n  const [query, setQuery] = useState('');\r\n  const [weather, setWeather] = useState({});\r\n\r\n  const search = evt => {\r\n    if (evt.key === \"Enter\") {\r\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\r\n        .then(res => res.json())\r\n        .then(result => {\r\n          setWeather(result);\r\n          setQuery('');\r\n          console.log(result);\r\n        });\r\n    }\r\n  }\r\n\r\n  const dateBuilder = (d) => {\r\n    let months = [\"Januar\", \"Februar\", \"März\", \"April\", \"Mai\", \"Juni\", \"Juli\", \"August\", \"September\", \"Oktober\", \"November\", \"Dezember\"];\r\n    let days = [\"Sonntag\", \"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\"];\r\n\r\n    let day = days[d.getDay()];\r\n    let date = d.getDate();\r\n    let month = months[d.getMonth()];\r\n    let year = d.getFullYear();\r\n\r\n    return `${day} ${date} ${month} ${year}`\r\n  }\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <main>\r\n        <div className=\"search-box\">\r\n          <input \r\n            type=\"text\"\r\n            className=\"search-bar\"\r\n            placeholder=\"Search ...\"\r\n            onChange={e => setQuery(e.target.value)}\r\n            value={query}\r\n            onKeyPress={search}\r\n            ></input>\r\n        </div>\r\n        <div className=\"location-box\">\r\n          <div className=\"location\">Berlin, Deutschland</div>\r\n          <div className=\"date\">{dateBuilder(new Date())}</div>\r\n        </div>\r\n        <div className=\"weather-box\">\r\n          <div className=\"temp\">\r\n            15°C\r\n          </div>\r\n          <div className=\"weather\">Sunny</div>\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}